name: Build and Release
on:
  release:
    types: [created]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v4
        with:
          submodules: true  # 初始化所有子模块

      # 切换到目标 tag
      - name: Checkout target tag
        run: |
          target_tag=${{ github.event.release.tag_name }}
          echo "目标 tag: $target_tag"
          if ! git rev-parse "$target_tag" >/dev/null 2>&1; then
            echo "错误: 目标 tag $target_tag 不存在"
            exit 1
          fi
          git fetch origin "$target_tag"
          git checkout "$target_tag"

      # 设置 Node.js 环境（假设前端项目需要）
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # 根据实际需要指定 Node.js 版本

      # 构建前端
      - name: Build Frontend
        run: |
          # 检查前端目录是否存在
          if [ ! -d "./leek-web" ]; then
            echo "错误: 前端目录不存在"
            exit 1
          fi

          # 检查 package.json 是否存在
          if [ ! -f "./leek-web/package.json" ]; then
            echo "错误: package.json 不存在"
            exit 1
          fi

          # 安装前端依赖
          echo "当前工作目录: $(pwd)"
          npm install --prefix leek-web || (echo "依赖安装失败"; exit 1)

          # 构建前端
          echo "构建前端..."
          npm run build --prefix leek-web || (echo "前端构建失败"; exit 1)

          # 检查构建结果
          if [ ! -d "./leek-web/dist" ]; then
            echo "错误: 前端构建目录不存在"
            exit 1
          fi

          if [ ! -f "./leek-web/dist/index.html" ]; then
            echo "错误: index.html 不存在"
            exit 1
          fi

      # 复制前端构建文件到后端静态目录
      - name: Copy Frontend to Backend
        run: |
          # 检查后端目录是否存在
          if [ ! -d "./leek-manager" ]; then
            echo "错误: 后端目录不存在"
            exit 1
          fi

          # 清空后端静态目录
          if [ -d "./leek-manager/static" ]; then
            echo "清空后端静态目录..."
            rm -rf ./leek-manager/static
          fi

          # 复制前端构建文件到后端
          echo "复制前端文件到后端..."
          cp -r ./leek-web/dist ./leek-manager/static
          echo "构建完成!"

      # 打包后端静态目录为指定格式的资产文件
      - name: Package Backend Static
        run: |
          tar --exclude='leek-core/.git' --exclude='leek-manager/.git' --exclude='leek-web/.git' --exclude='leek-web/node_modules' --exclude='leek-web/dist' -czf leek_${{ github.event.release.name }}.tar.gz leek-core leek-web leek-manager leek.py LICENSE README.md

      # 上传资产文件
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: leek_${{ github.event.release.name }}.tar.gz
          asset_name: leek_${{ github.event.release.name }}.tar.gz
          asset_content_type: application/gzip
